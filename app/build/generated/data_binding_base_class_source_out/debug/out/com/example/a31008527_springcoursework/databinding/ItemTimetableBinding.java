// Generated by view binder compiler. Do not edit!
package com.example.a31008527_springcoursework.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.a31008527_springcoursework.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTimetableBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView moduleLocationTxt;

  @NonNull
  public final TextView moduleNameTxt;

  @NonNull
  public final TextView moduleTimeTxt;

  @NonNull
  public final CardView timetableCardview;

  private ItemTimetableBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView moduleLocationTxt, @NonNull TextView moduleNameTxt,
      @NonNull TextView moduleTimeTxt, @NonNull CardView timetableCardview) {
    this.rootView = rootView;
    this.moduleLocationTxt = moduleLocationTxt;
    this.moduleNameTxt = moduleNameTxt;
    this.moduleTimeTxt = moduleTimeTxt;
    this.timetableCardview = timetableCardview;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTimetableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTimetableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_timetable, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTimetableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.module_location_txt;
      TextView moduleLocationTxt = ViewBindings.findChildViewById(rootView, id);
      if (moduleLocationTxt == null) {
        break missingId;
      }

      id = R.id.module_name_txt;
      TextView moduleNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (moduleNameTxt == null) {
        break missingId;
      }

      id = R.id.module_time_txt;
      TextView moduleTimeTxt = ViewBindings.findChildViewById(rootView, id);
      if (moduleTimeTxt == null) {
        break missingId;
      }

      id = R.id.timetable_cardview;
      CardView timetableCardview = ViewBindings.findChildViewById(rootView, id);
      if (timetableCardview == null) {
        break missingId;
      }

      return new ItemTimetableBinding((RelativeLayout) rootView, moduleLocationTxt, moduleNameTxt,
          moduleTimeTxt, timetableCardview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
